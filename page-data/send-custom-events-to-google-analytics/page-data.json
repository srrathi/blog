{"componentChunkName":"component---src-components-templates-blog-post-js","path":"/send-custom-events-to-google-analytics","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Send custom events to Google Analytics using AJAX","date":"11/09/2020","tags":["Google Analytics","AJAX"]},"html":"<p><strong><em>This information is for educational purposes only.</em></strong></p>\n<p>This method is used by browser add-ons to track user events as they are not allowed to have third party scripts in their source code.</p>\n<p>The code for doing so is follows:</p>\n<pre><code>let hitGA = () => {\n  const GA_TRACKING_ID = \"your GA tracking ID\"\n  const GA_CLIENT_ID = \"A valid Client Id to which the event will be assoiciated\"\n\n  const event = {\n    category: \"pricing\",\n    action: \"counted\",\n    label: \"num_active_users\",\n    value: 71\n  }\n  let request = new XMLHttpRequest();\n  let message = \n  `v=1&#x26;tid=${GA_TRACKING_ID}&#x26;cid=${GA_CLIENT_ID}&#x26;aip=1&#x26;ds=add-on&#x26;t=event&#x26;ec=${event.category}&#x26;ea=${event.action}&#x26;el=${event.label}&#x26;ev=${event.value}`\n\n  request.open(\"POST\", \"https://www.google-analytics.com/collect\", true);\n  request.send(message);\n\n}\n</code></pre>\n<p><em>Now let's understand what this is doing.</em></p>\n<p>We see that in the second last line we are sending a <code>POST</code> request to the endpoint <code>google-analytics.com/collect</code>.</p>\n<p>The most important thing here is the <code>message</code> and the object <code>event</code></p>\n<p><code>event</code> specifies the event you want to track in analytics. If you read the <a href=\"https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#events\">official documentation</a>  you will see that every event requires a <code>category</code> and <code>action</code>, the <code>label</code> and <code>value</code> are optional </p>\n<p><code>message</code> is the actual  data that send to the endpoint.</p>\n<!--  -->\n<p>Here, <code>message</code> consists of many attributes. A few important ones are:</p>\n<ol>\n<li><code>tid</code>  is analytics tracking Id You can get the <code>GA_TRACKING_ID</code> from your google analytics admin settings pannel.</li>\n<li><code>cid</code> is the customer id. This is used to recognise the user to whom the event is associated. For testing purposes, to get a valid <code>cid</code> follow the steps given in <a href=\"https://www.owox.com/blog/use-cases/google-analytics-client-id/\">this article</a></li>\n<li>All the attributes starting with <em>e</em> are used to define the event. We pass its values from the object that we created.</li>\n</ol>\n<blockquote>\n<p><strong>Note</strong>: <em>The event value, though optional, must be an integer. everything else can be a string</em></p>\n</blockquote>\n<p>To test this you can copy the above code to your browser's console.</p>\n<p>This should probably give a <code>200 OK</code> Response but you might still not be able to see the event in google analytics. This is because analytics takes considerable time to show tracked events.</p>\n<p>Also, if you want to execute this in a <code>Node</code> environment you will have to install <code>XMLHttpRequest</code> module. This is because <code>XMLHttpRequest</code> is a built-in object in web browsers. You can do so with </p>\n<pre><code>npm install xmlhttprequest\n</code></pre>\n<p>And there you go!</p>\n<blockquote>\n<p>This does point out that anyone with your <code>GA_TRACKING_ID</code> can raise <em>bogus events</em> and spoil your analytics.</p>\n<p>But, as I said, <em>this article is for educational purposes only.</em></p>\n</blockquote>\n<hr>\n<p>If you are curious, check out <a href=\"/blog/how-to-add-custom-KPI-tracking-in-Google-analytics\">how I was able to learn about this</a>. </p>"}},"pageContext":{"slug":"send-custom-events-to-google-analytics"}},"staticQueryHashes":["2199005656","3159585216"]}